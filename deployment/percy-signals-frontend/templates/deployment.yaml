apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "percy-signals-frontend.fullname" . }}
  labels:
    {{- include "percy-signals-frontend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "percy-signals-frontend.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "percy-signals-frontend.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "percy-signals-frontend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      initContainers:
      - name: init-frontend
        image: busybox
        command: ['sh', '-c', '{{- range .Values.env }}echo {{ .name }}={{ .value }} >> /work-dir/env.production; {{ end }}'] 
        env:
          {{- range .Values.env }}
          - name: {{ .name }}
            value: {{ .value }}
          {{- end }}
        volumeMounts:
        - name: workdir
          mountPath: /work-dir
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          command: ['sh', '-c', 'cp /work-dir/env.production /app/env.production && npm start']
          image: {{ .Values.Deployment.image }}
          env: 
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value }}
            {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: workdir
            mountPath: /work-dir
      volumes:
        - name: workdir
          emptyDir: {}  

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
